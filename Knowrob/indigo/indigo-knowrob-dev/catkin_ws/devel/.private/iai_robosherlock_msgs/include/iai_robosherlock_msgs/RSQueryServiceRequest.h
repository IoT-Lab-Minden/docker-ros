// Generated by gencpp from file iai_robosherlock_msgs/RSQueryServiceRequest.msg
// DO NOT EDIT!


#ifndef IAI_ROBOSHERLOCK_MSGS_MESSAGE_RSQUERYSERVICEREQUEST_H
#define IAI_ROBOSHERLOCK_MSGS_MESSAGE_RSQUERYSERVICEREQUEST_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace iai_robosherlock_msgs
{
template <class ContainerAllocator>
struct RSQueryServiceRequest_
{
  typedef RSQueryServiceRequest_<ContainerAllocator> Type;

  RSQueryServiceRequest_()
    : query()  {
    }
  RSQueryServiceRequest_(const ContainerAllocator& _alloc)
    : query(_alloc)  {
  (void)_alloc;
    }



   typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _query_type;
  _query_type query;




  typedef boost::shared_ptr< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> const> ConstPtr;

}; // struct RSQueryServiceRequest_

typedef ::iai_robosherlock_msgs::RSQueryServiceRequest_<std::allocator<void> > RSQueryServiceRequest;

typedef boost::shared_ptr< ::iai_robosherlock_msgs::RSQueryServiceRequest > RSQueryServiceRequestPtr;
typedef boost::shared_ptr< ::iai_robosherlock_msgs::RSQueryServiceRequest const> RSQueryServiceRequestConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace iai_robosherlock_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': False}
// {'shape_msgs': ['/opt/ros/indigo/share/shape_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/indigo/share/std_msgs/cmake/../msg'], 'actionlib_msgs': ['/opt/ros/indigo/share/actionlib_msgs/cmake/../msg'], 'sensor_msgs': ['/opt/ros/indigo/share/sensor_msgs/cmake/../msg'], 'iai_robosherlock_msgs': ['/root/catkin_ws/src/iai_common_msgs/iai_robosherlock_msgs/msg', '/root/catkin_ws/devel/.private/iai_robosherlock_msgs/share/iai_robosherlock_msgs/msg'], 'designator_integration_msgs': ['/root/catkin_ws/src/iai_common_msgs/designator_integration_msgs/msg'], 'geometry_msgs': ['/opt/ros/indigo/share/geometry_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "6490a46152f373285fe18f491ed93702";
  }

  static const char* value(const ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x6490a46152f37328ULL;
  static const uint64_t static_value2 = 0x5fe18f491ed93702ULL;
};

template<class ContainerAllocator>
struct DataType< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "iai_robosherlock_msgs/RSQueryServiceRequest";
  }

  static const char* value(const ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "string query\n\
";
  }

  static const char* value(const ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.query);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct RSQueryServiceRequest_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::iai_robosherlock_msgs::RSQueryServiceRequest_<ContainerAllocator>& v)
  {
    s << indent << "query: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.query);
  }
};

} // namespace message_operations
} // namespace ros

#endif // IAI_ROBOSHERLOCK_MSGS_MESSAGE_RSQUERYSERVICEREQUEST_H
