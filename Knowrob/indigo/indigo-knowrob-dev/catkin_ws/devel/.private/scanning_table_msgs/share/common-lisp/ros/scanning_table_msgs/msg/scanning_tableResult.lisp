; Auto-generated. Do not edit!


(cl:in-package scanning_table_msgs-msg)


;//! \htmlinclude scanning_tableResult.msg.html

(cl:defclass <scanning_tableResult> (roslisp-msg-protocol:ros-message)
  ((answer
    :reader answer
    :initarg :answer
    :type cl:string
    :initform ""))
)

(cl:defclass scanning_tableResult (<scanning_tableResult>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <scanning_tableResult>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'scanning_tableResult)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name scanning_table_msgs-msg:<scanning_tableResult> is deprecated: use scanning_table_msgs-msg:scanning_tableResult instead.")))

(cl:ensure-generic-function 'answer-val :lambda-list '(m))
(cl:defmethod answer-val ((m <scanning_tableResult>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader scanning_table_msgs-msg:answer-val is deprecated.  Use scanning_table_msgs-msg:answer instead.")
  (answer m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <scanning_tableResult>) ostream)
  "Serializes a message object of type '<scanning_tableResult>"
  (cl:let ((__ros_str_len (cl:length (cl:slot-value msg 'answer))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) (cl:slot-value msg 'answer))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <scanning_tableResult>) istream)
  "Deserializes a message object of type '<scanning_tableResult>"
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'answer) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:slot-value msg 'answer) __ros_str_idx) (cl:code-char (cl:read-byte istream)))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<scanning_tableResult>)))
  "Returns string type for a message object of type '<scanning_tableResult>"
  "scanning_table_msgs/scanning_tableResult")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'scanning_tableResult)))
  "Returns string type for a message object of type 'scanning_tableResult"
  "scanning_table_msgs/scanning_tableResult")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<scanning_tableResult>)))
  "Returns md5sum for a message object of type '<scanning_tableResult>"
  "d7e708f879c94bb931716d8f4f130f30")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'scanning_tableResult)))
  "Returns md5sum for a message object of type 'scanning_tableResult"
  "d7e708f879c94bb931716d8f4f130f30")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<scanning_tableResult>)))
  "Returns full string definition for message of type '<scanning_tableResult>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#result~%string answer~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'scanning_tableResult)))
  "Returns full string definition for message of type 'scanning_tableResult"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#result~%string answer~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <scanning_tableResult>))
  (cl:+ 0
     4 (cl:length (cl:slot-value msg 'answer))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <scanning_tableResult>))
  "Converts a ROS message object to a list"
  (cl:list 'scanning_tableResult
    (cl:cons ':answer (answer msg))
))
